# -*- coding: utf-8 -*-
"""gradientDescent for Neural net.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v3wFVkZayWVGmsHiFu5wu_kQMjJjiIQt
"""

import numpy as np
import pandas as pd
from tensorflow import keras
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/insurance_data.csv')
df.head()

df.shape

from sklearn.model_selection import train_test_split
xtr,xte,ytr,yte = train_test_split(df[['age']],df.bought_insurance,test_size=0.1)

len(xtr)

xtr_scaled=xtr.copy()
xtr_scaled['age']=xtr_scaled['age']/100

xte_scaled=xtr.copy()
xte_scaled['age']=xte_scaled['age']/100

xtr_scaled

model = keras.Sequential([
    keras.layers.Dense(1,input_shape=(1,),activation='sigmoid',kernel_initializer='ones',bias_initializer='zeros')
])

model.compile(
    optimizer='adam',
    loss='binary_crossentropy',
    metrics=['accuracy']
)

model.fit(xtr_scaled,ytr,epochs=5000)

xte_scaled

model.predict(xte_scaled)

yte

coef,intercept = model.get_weights()
coef,intercept